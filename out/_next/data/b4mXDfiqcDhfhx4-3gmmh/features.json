{"pageProps":{"slug":"features","data":{"frontmatter":{"title":"Features","layout":"features","draft":false,"features":[{"title":"Overview activities","contents":[{"icon":"/images/IconFilter.svg","description":"Filtering by project team or personal"},{"icon":"/images/IconCalendar.svg","description":"Support list view and calendar view"},{"icon":"/images/IconChart.svg","description":"Beat progress chart overview"}],"images":["/images/service-slide-1.png"]},{"title":"Overview project health","contents":[{"icon":"/images/IconEstimate.svg","description":"Estimate project budget"},{"icon":"/images/IconProject.svg","description":"Overview project health"}],"images":["/images/service-slide-1.png"]},{"title":"Customer management","contents":[{"icon":"/images/IconCustomer.svg","description":"Customer management"},{"icon":"/images/IconContact.svg","description":"Support customer contacts"}],"images":["/images/service-slide-1.png"]},{"title":"Task management","contents":[{"icon":"/images/IconProject.svg","description":"Support scrum board view"},{"icon":"/images/IconAdvance.svg","description":"Support advanced filtering"},{"icon":"/images/IconCode.svg","description":"Support markdown format"}],"images":["/images/service-slide-1.png"]},{"title":"Attendance management","contents":[{"icon":"/images/IconApprove.svg","description":"Approval"},{"icon":"/images/IconPieChart.svg","description":"Calculate time spent on activities"}],"images":["/images/service-slide-1.png"]},{"title":"Overview activities","contents":[{"icon":"/images/IconColor.svg","description":"Accent color"},{"icon":"/images/IconTheme.svg","description":"Theme background"}],"images":["/images/service-slide-1.png"]}],"call_to_action":{"title":"One simple solution for following whatever your company requires","content":"","button":{"enable":true,"label":"Try now","link":"#"}}},"content":"","mdxContent":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  return _jsx(_Fragment, {});\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}}},"__N_SSG":true}